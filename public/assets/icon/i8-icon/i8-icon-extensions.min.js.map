{"version":3,"sources":["i8-icon-extensions.min.js"],"names":["window","jQuery","angular","i8ApiExtension","injector","config","platformsMap","apiToken","publicApi","iconManager","platforms","ios8","win8","android","androidL","flat_color","Object","keys","forEach","platform","toLowerCase","alias","setDefaultIconSet","addSvgIconSet","icons","options","url","gateway","params","Array","isArray","join","token","cumulative","iconIdParser","id","index","String","map","param","length","hasOwnProperty","i8ApiToken","has","strategy","materialDesignIconsExtension","di","iconIdFilter","replace","iconIdResolver","preloadable","categories","category","version","extensionsBinder","extension","extensions","listeners","push","fn","console","error","listener","i8ApiConfig","materialDesignIconsConfig","addFontIconSet","name","classBuilder","prototype","apply","addIconSetAlias","i8icon","module","$i8IconProvider"],"mappings":"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","file":"i8-icon-extensions.min.js","sourcesContent":[";(function(window, jQuery, angular) {\n\n'use strict';\n\nvar\n  i8ApiConfig = {\n    gateway: {\n      url: '//api.icons8.com/api/iconsets/svg-symbol'\n    }\n  };\n\n\n'use strict';\n\nfunction i8ApiExtension(injector, config) {\n  var\n    publicApi = injector('publicApi'),\n    iconManager = injector('iconManager'),\n    platforms = {\n      ios8: ['ios', 'ios7', 'i'],\n      win8: ['win', 'w'],\n      android: ['kitkat', 'ak', 'a-k', 'k'],\n      androidL: ['android-l', 'al', 'a-l', 'l'],\n      flat_color: ['color', 'c', 'colored']\n    },\n    platformsMap,\n    apiToken;\n\n  platformsMap = {};\n  Object.keys(platforms).forEach(function(platform) {\n    platformsMap[platform.toLowerCase()] = platform;\n    platforms[platform].forEach(function(alias) {\n      platformsMap[alias] = platform;\n    });\n  });\n\n  iconManager\n    .setDefaultIconSet('i8')\n    .addSvgIconSet(\n    'i8',\n    function(icons) {\n      var\n        options = {\n          url: config.gateway.url,\n          params: {}\n        };\n\n      if (icons) {\n        if (!Array.isArray(icons)) {\n          icons = [icons];\n        }\n        options.params.icons = icons.join(',');\n      }\n      if (apiToken) {\n        options.params.token = apiToken;\n      }\n      return options;\n    },\n    {\n      cumulative: true,\n      iconIdParser: function(id, params) {\n        var\n          index;\n        id = String(id || '');\n        if (!Array.isArray(params)) {\n          params = [];\n        }\n        params = params.map(function(param) {\n          return String(param).toLowerCase();\n        });\n        for (index = 0; index < params.length; index++) {\n          if (platformsMap.hasOwnProperty(params[index])) {\n            return [platformsMap[params[index]], id].join('-');\n          }\n        }\n\n        return [platformsMap['c'], id].join('-');\n      }\n    }\n  );\n\n  publicApi.i8ApiToken = function(token) {\n    apiToken = token;\n  };\n\n  if (injector.has('configPerformer')) {\n    injector('configPerformer').strategy(function(config) {\n      if (typeof config.i8ApiToken != 'undefined') {\n        publicApi.i8ApiToken(config.i8ApiToken);\n      }\n    });\n  }\n\n}\n\n\n'use strict';\n\nvar\n  materialDesignIconsConfig = {\n    version: '1.0.1',\n    categories: [\n      'action',\n      'alert',\n      'av',\n      'communication',\n      'content',\n      'device',\n      'editor',\n      'file',\n      'hardware',\n      'image',\n      'maps',\n      'navigation',\n      'notification',\n      'social',\n      'toggle'\n    ]\n  };\n\n\n'use strict';\n\nfunction materialDesignIconsExtension(di, config) {\n  var\n    iconManager = di('iconManager'),\n    iconIdFilter,\n    options;\n\n  iconIdFilter = function(id) {\n    return String(id || '')\n      .replace(/_/g, '-')\n      .replace(/^ic-/, '')\n      .replace(/-\\d+px$/, '');\n  };\n\n  options = {\n    iconIdResolver: iconIdFilter,\n    iconIdParser: iconIdFilter,\n    preloadable: false\n  };\n\n  config.categories\n    .forEach(function(category) {\n      iconManager.addSvgIconSet(\n        'md-' + category,\n        '//cdn.rawgit.com/google/material-design-icons/' + config.version + '/sprites/svg-sprite/svg-sprite-' + category + '.svg',\n        options\n      )\n    });\n\n}\n'use strict';\n\nextension(function(injector) {\n  var\n    iconManager = injector('iconManager');\n\n  iconManager\n    .addFontIconSet(\n      'fa',\n      function(name, params) {\n        var\n          classBuilder = [\n            'fa',\n            'fa-' + name\n          ];\n        params = params || [];\n        Array.prototype.push.apply(\n          classBuilder,\n          params.map(function(param) {\n            return 'fa-'+param\n          })\n        );\n        return classBuilder.join(' ')\n      }\n    );\n\n});\n\n'use strict';\n\nextension(function(injector) {\n  var\n    iconManager = injector('iconManager');\n\n  iconManager\n    .addIconSetAlias('glyphicon', 'gi')\n    .addFontIconSet('glyphicon', 'glyphicon glyphicon-?');\n\n});\n'use strict';\n\nextension(function(injector) {\n\n  i8ApiExtension(injector, i8ApiConfig);\n\n});\n\n\n'use strict';\n\nextension(function(injector) {\n\n  materialDesignIconsExtension(injector, materialDesignIconsConfig);\n\n});\n'use strict';\n\nif (typeof jQuery != 'undefined' && jQuery.fn.i8icon) {\n  jQuery.fn.i8icon.extension(extensionsBinder);\n}\nif (typeof angular != 'undefined' && angular.module('i8.icon')) {\n  angular.module('i8.icon').config([\n    '$i8IconProvider',\n    function($i8IconProvider) {\n      $i8IconProvider.extension(extensionsBinder)\n    }\n  ])\n}\n\nfunction extensionsBinder(injector) {\n\n  (extension.extensions || []).forEach(function(extension) {\n    extension(injector);\n  });\n  extension.listeners = extension.listeners || [];\n  extension.listeners.push(function(extension) {\n    extension(injector);\n  });\n}\n\nfunction extension(fn) {\n  var\n    listeners,\n    extensions;\n\n  listeners = extension.listeners = extension.listeners || [];\n  extensions = extension.extensions = extension.extensions || [];\n\n  if (typeof fn != 'function') {\n    console.error('Extension is not a function');\n    return;\n  }\n  extensions.push(fn);\n  listeners.forEach(function(listener) {\n    listener(fn);\n  });\n}\n\n\n})(window, window.jQuery, window.angular);"],"sourceRoot":"/source/"}